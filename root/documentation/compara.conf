<endpoints>
  <homology_symbol>
    description=Retrieves homology information by symbol
    endpoint=homology/symbol/:species/:symbol
    method=GET
    group=Comparative Genomics
    output=json
    output=xml
    <params>
      <species>
        type=String
        description=Registry name/aliases used to restrict searches by
        example=__VAR(species)__
        example=__VAR(species_common)__
        required=1
      </species>
      <symbol>
        type=String
        description=Symbol to search with
        example=__VAR(gene_symbol)__
        required=1
      </symbol>
      <compara>
        type=String
        description=The name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data
        default=multi (if using Ensembl)
        example=multi
      </compara>
      <external_db>
        type=String
        description=Limit your symbol search to just this database
        example=__VAR(gene_symbol_db)__
      </external_db>
      <format>
        type=Enum(full,condensed)
        description=Specify the formats to emit from this endpoint
        default=full
      </format>
      <type>
        type=Enum(orthologues, paralogues, projections, all)
        description=The type of homology to return from this call. Projections are orthology calls defined between alternative assemblies and the genes shared between them. Useful if you need only one type of homology back from the service
        default=all
      </type>
      <target_species>
        type=String
        description=Target species to restrict the homology results from. Supports all registry aliases
        example=__VAR(species)__
        example=__VAR(species_common)__
      </target_species>
      <target_taxon>
        type=Integer
        description=Taxon identifier to search by
        example=__VAR(taxon)__
        example=__VAR(target_taxon)__
      </target_taxon>
      <aligned>
        type=Boolean
        description=Alter if the sequence returned by this endpoint shows the aligned string with insertions where applicable
        default=1
      </aligned>
      <sequence>
        type=Enum(none, cdna, protein)
        description=The type of sequence to bring back. Setting it to none results in no sequence being returned
        default=protein
      </sequence>
    </params>
    <examples>
      <basic>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=application/json
      </basic>
      <basic_xml>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=text/xml
      </basic_xml>
      <format>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=application/json
        <params>
          type=orthologues
          format=condensed
        </params>
      </format>
      <format_limits>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=application/json
        <params>
          type=orthologues
          format=condensed
          target_taxon=__VAR(target_taxon)__
          target_species=__VAR(target_species)__
        </params>
      </format_limits>
      <format_limits_cdna>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=application/json
        <params>
          type=orthologues
          target_taxon=__VAR(target_taxon)__
          target_species=__VAR(target_species)__
          sequence=cdna
        </params>
      </format_limits_cdna>
    </examples>
  </homology_symbol>
  <homology_ensemblgene>
    description=Retrieves homology information by ensembl gene id
    endpoint=homology/id/:id
    method=GET
    group=Comparative Genomics
    output=json
    output=xml
    <params>
      <species>
        type=String
        description=Registry name/aliases used to restrict searches by. Only required if a stable ID is not unique to a species (not the case with Ensembl databases)
        example=__VAR(species)__
        example=__VAR(species_common)__
      </species>
      <id>
        type=String
        description=Ensembl Gene id
        example=__VAR(gene_stable_id)__
        required=1
      </id>
      <compara>
        type=String
        description=The name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data
        default=multi (if using Ensembl)
        example=multi
      </compara>
      <format>
        type=Enum(full, condensed)
        description=Specify the formats to emit from this endpoint
        default=full
      </format>
      <type>
        type=Enum(orthologues, paralogues, projections, all)
        description=The type of homology to return from this call. Projections are orthology calls defined between alternative assemblies and the genes shared between them. Useful if you need only one type of homology back from the service
        default=all
      </type>
      <target_species>
        type=String
        description=Target species to restrict the homology results from. Supports all registry aliases
        example=__VAR(species_common)__
        example=__VAR(target_species)__
      </target_species>
      <target_taxon>
        type=Integer
        description=Taxon identifier to search by
        example=__VAR(taxon)__
        example=__VAR(target_taxon)__
      </target_taxon>
      <aligned>
        type=Boolean
        description=Alter if the sequence returned by this endpoint shows the aligned string with insertions where applicable
        default=1
      </aligned>
      <sequence>
        type=Enum(none, cdna, protein)
        description=The type of sequence to bring back. Setting it to none results in no sequence being returned
        default=protein
      </sequence>
    </params>
    <examples>
      <basic>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=application/json
      </basic>
      <basic_xml>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=text/xml
      </basic_xml>
      <compara>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        <params>
          compara=__VAR(compara)__
        </params>
        content=application/json
      </compara>
      <format>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=application/json
        <params>
          type=orthologues
          format=condensed
        </params>
      </format>
      <format_limits>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=application/json
        <params>
          type=orthologues
          format=condensed
          target_taxon=__VAR(target_taxon)__
        </params>
      </format_limits>
      <format_limits_cdna>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=application/json
        <params>
          type=orthologues
          target_taxon=__VAR(target_taxon)__
          target_species=__VAR(target_species)__
          sequence=cdna
        </params>
      </format_limits_cdna>
    </examples>
  </homology_ensemblgene>
  <genetree>
    description=Retrieves Gene Tree dumps for a given Gene Tree stable identifier
    endpoint=genetree/id/:id
    method=GET
    group=Comparative Genomics
    output=xml
    output=phyloxml
    output=nh
    <params>
      <id>
        type=String
        description=Ensembl GeneTree ID
        example=__VAR(genetree_stable_id)__
        required=1
      </id>
      <compara>
        type=String
        description=The name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data. By default we search all available comparas for the given identifier
        default=multi (if using Ensembl)
        example=multi
      </compara>
      <aligned>
        type=Boolean
        description=Alter if the sequence returned by this endpoint shows the aligned string with insertions where applicable
        default=0
      </aligned>
      <sequence>
        type=Enum(none, cdna, protein)
        description=The type of sequence to bring back. Setting it to none results in no sequence being returned
        default=protein
      </sequence>
      <phyloxml_sequence>
        type=Enum(none, cdna, protein)
        default=protein
        deprecated=sequence
      </phyloxml_sequence>
      <phyloxml_aligned>
        type=Boolean
        default=0
        deprecated=aligned
      </phyloxml_aligned>
      <nh_format>
        type=Enum(full, display_label_composite, simple, species, species_short_name, ncbi_taxon, ncbi_name, njtree, phylip)
        description=The format of a NH (New Hampshire) request.
        default=simple
      </nh_format>
    </params>
    <examples>
      <phyloxml>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=text/x-phyloxml+xml
      </phyloxml>
      <phyloxml_cdna>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=text/x-phyloxml+xml
        <params>
          sequence=cdna
          aligned=1
        </params>
      </phyloxml_cdna>
      <phyloxml_none>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=text/x-phyloxml+xml
        <params>
          sequence=none
        </params>
      </phyloxml_none>
      <nh>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=text/x-nh
        <params>
          nh_format=simple
        </params>
      </nh>
    </examples>
  </genetree>
  <genetree_member_id>
    description=Retrieves the Gene Tree that contains the given stable identifier
    endpoint=genetree/member/id/:id
    method=GET
    group=Comparative Genomics
    output=xml
    output=phyloxml
    output=nh
    <params>
      <id>
        type=String
        description=Ensembl Gene ID
        example=__VAR(gene_stable_id)__
        required=1
      </id>
      <species>
        type=String
        description=Registry name/aliases used to restrict searches by. Only required if a stable ID is not unique to a species (not the case with Ensembl databases)
        example=__VAR(species)__
        example=__VAR(species_common)__
      </species>
      <db_type>
        type=String
        description=Registry group which we should limit our search to. Useful if a stable ID is not unique to a species
        example=core
      </db_type>
      <object_type>
        type=String
        description=Object type to restrict searches to. Used when a stable ID is not unique to a single class. This is equivalent to the Perl API object classes
        example=gene
        example=transcript
      </object_type>
    </params>
    <examples>
      <phyloxml>
        path=/genetree/member/id/
        capture=__VAR(gene_stable_id)__
        content=text/x-phyloxml+xml
      </phyloxml>
    </examples>
  </genetree_member_id>
  <genetree_member_symbol>
    description=Retrieves a Gene Tree containing the Gene identified by the given symbol
    endpoint=genetree/member/symbol/:species/:symbol
    method=GET
    group=Comparative Genomics
    output=xml
    output=phyloxml
    output=nh
    <params>
      <symbol>
        type=String
        description=Symbol or display name of a gene
        example=__VAR(gene_symbol)__
        required=1
      </symbol>
      <species>
        type=String
        description=Registry name/aliases used to restrict searches by
        example=__VAR(species)__
        example=__VAR(species_common)__
        required=1
      </species>
      <db_type>
        type=String
        description=Force the database to search for symbols in. Useful if you need to use a DB other than core
        default=core
        example=core
        example=otherfeatures
      </db_type>
      <external_db>
        type=String
        description=Limit your symbol search to just this database
        example=__VAR(gene_symbol_db)__
      </external_db>
      <object_type>
        type=String
        description=Object type to restrict searches to. This is equivalent to the Perl API object classes
        example=gene
        example=transcript
      </object_type>
    </params>
    <examples>
      <phyloxml>
        path=/genetree/member/symbol/
        capture=__VAR(species)__
        capture=__VAR(gene_symbol)__
        content=text/x-phyloxml+xml
      </phyloxml>
    </examples>
  </genetree_member_symbol>
  <genomic_alignment_region>
    description=Retrieves genomic alignments as separate blocks based on its location
    endpoint=alignment/region/:species/:region
    method=GET
    group=Comparative Genomics
    output=json
    output=xml
    output=phyloxml
    <params>
      <region>
        type=String
        description=The region to retrieve sequence for. A maximum of 10Mb is allowed to be requested at any one time
        example=__VAR(sequence_region)__
        example=__VAR(sequence_region_negative)__
        example=__VAR(sequence_region_strandless)__
        required=1
      </region>
      <species>
        type=String
        description=Registry name/aliases used to restrict searches by
        example=__VAR(species)__
        example=__VAR(species_common)__
        required=1
      </species>
      <compara>
        type=String
        description=The name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data
        default=multi (if using Ensembl)
        example=multi
      </compara>
      <aligned>
        type=Boolean
	description=Display the aligned sequence if set to 1. Show the original sequence (no insertions) if set to 0.
	default=1
      </aligned>
      <mask>
        type=Enum(hard,soft)
        description=Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. 
        example=hard
      </mask> 
      <species_set_group>
        type=String
        description=The species set group name of the multiple alignment. Should not be used with the species_set parameter. Use <a href="/documentation/info/compara_species_sets">/info/compara/species_sets/:method</a> with one of the methods listed above to obtain a valid list of group names.
        default=mammals
	example=mammals, amniotes, fish, sauropsids
      </species_set_group>
      <species_set>
        type=String
	description=The set of species used to define the pairwise alignment (multiple values). Should not be used with the species_set_group parameter. Use <a href="/documentation/info/compara_species_sets">/info/compara/species_sets/:method</a> with one of the methods listed above to obtain a valid list of species sets. Any valid registry names may be used.
	example=homo_sapiens
	example=mus_musculus
      </species_set>
      <method>
        type=Enum(EPO, EPO_LOW_COVERAGE, PECAN, LASTZ_NET, BLASTZ_NET, TRANSLATED_BLAT_NET)
	description=The alignment method
	default=EPO
	example=PECAN
      </method>
      <display_species_set>
        type=String
        description= Subset of species in the alignment to be displayed (multiple values). All the species in the alignment will be displayed if this is not set. Any valid registry names may be used.
	example=human
	example=chimp
	example=gorilla
      </display_species_set>
      <compact>
        type=Boolean
	description= Applicable to EPO_LOW_COVERAGE alignments. If set to 1, concatentate the low coverage species sequences together to create a single sequence. If set to 0, separates out all sequences.
	default=1
      </compact>
    </params>
    <examples>
      <basic>
        path=/alignment/block/region/
        capture=__VAR(genomic_alignment_species)__
        capture=__VAR(genomic_alignment_region)__
        content=application/json
	<params>
	  species_set_group=__VAR(genomic_alignment_group)__
        </params>
      </basic>
      <basic_xml>
        path=/alignment/block/region/
        capture=__VAR(genomic_alignment_species)__
        capture=__VAR(genomic_alignment_region)__
        content=text/x-phyloxml
	<params>
	  species_set_group=__VAR(genomic_alignment_group)__
        </params>
      </basic_xml>
    </examples>
  </genomic_alignment_region>
</endpoints>
