<endpoints>
  <xref_external>
    description=Looks up an external symbol and returns all Ensembl objects linked to it. This can be a display name for a gene/transcript/translation, a synonym or an externally linked reference. If a gene's transcript is linked to the supplied symbol the service will return both gene and transcript (it supports transient links).
    endpoint=xrefs/symbol/:species/:symbol
    method=GET
    group=Cross References
    output=json
    output=xml
    <params>
      <symbol>
        type=String
        description=The external name/symbol to search for
        example=__VAR(gene_symbol)__
        required=1
      </symbol>
      <species>
        type=String
        description=Species name or alias
        example=__VAR(species)__
        example=__VAR(species_common)__
        required=1
      </species>
      <object_type>
        type=String
        description=Genetic feature type to filter results by. Defaults to using all known main object types i.e. gene, transcript and translation
        example=gene
        example=transcript
      </object_type>
      <external_db>
        type=String
        description=Limit searches to an external database name
        example=__VAR(gene_symbol_db)__
      </external_db>
      <db_type>
        type=String
        description=Restrict the search to a particular database type. Useful if you need to use a database other than core
        default=core
        example=core
        example=otherfeatures
      </db_type>
    </params>
    <examples>
      <basic>
        path=/xrefs/symbol/
        capture=__VAR(species)__
        capture=__VAR(gene_symbol)__
        content=application/json
      </basic>
      <xml>
        path=/xrefs/symbol/
        capture=__VAR(species)__
        capture=__VAR(gene_symbol)__
        content=text/xml
      </xml>
      <edblimit>
        path=/xrefs/symbol/
        capture=__VAR(species)__
        capture=__VAR(gene_symbol)__
        <params>
          external_db=__VAR(gene_symbol_db)__
        </params>
        content=application/json
      </edblimit>
    </examples>
  </xref_external>
  <xref_id>
    description=Perform lookups of Ensembl Identifiers and retrieve their external references in other databases
    endpoint=xrefs/id/:id
    method=GET
    group=Cross References
    output=json
    output=xml
    <params>
      <id>
        type=String
        description=An Ensembl Stable ID
        example=ENSG00000157764
        required=1
      </id>
      <species>
        type=String
        description=Species name or alias
        example=__VAR(species)__
        example=__VAR(species_common)__
      </species>
      <object_type>
        type=String
        description=Filter results to a single genetic feature type.
        example=gene
        example=transcript
      </object_type>
      <all_levels>
        type=Boolean
        description=Set to find all genetic features linked to the stable ID, and fetch all external references for them. Specifying this on a gene will also return values from its transcripts and translations
        example=1
        default=0
      </all_levels>
      <external_db>
        type=String
        description=Limit searches to a single external database name
        example=__VAR(gene_symbol_db)__
      </external_db>
      <db_type>
        type=String
        description=Restrict the search to a database other than the default. Useful if you need to use a DB other than core
        default=core
        example=core
        example=otherfeatures
      </db_type>
    </params>
    <examples>
      <basic>
        path=/xrefs/id/
        capture=__VAR(gene_stable_id)__
        content=application/json
      </basic>
      <limits>
        path=/xrefs/id/
        capture=__VAR(transcript_stable_id)__
        <params>
          all_levels=1
          external_db=__VAR(transcript_symbol_db)__
        </params>
        content=application/json
      </limits>
    </examples>
  </xref_id>
  <xref_name>
    description=Performs a lookup based upon the primary accession or display label of an external reference and returning the information we hold about the entry
    endpoint=xrefs/name/:species/:name
    method=GET
    group=Cross References
    output=json
    output=xml
    <params>
      <name>
        type=String
        description=The external name/primary accession to search for
        example=__VAR(gene_symbol)__
        required=1
      </name>
      <species>
        type=String
        description=Species name or alias
        example=__VAR(species)__
        example=__VAR(species_common)__
        required=1
      </species>
      <external_db>
        type=String
        description=Limit searches to a single external database name
        example=__VAR(gene_symbol_db)__
      </external_db>
      <db_type>
        type=String
        description=Force the search to be in a database other than the default. Useful if you need to use a DB other than core
        default=core
        example=core
        example=otherfeatures
      </db_type>
    </params>
    <examples>
      <basic>
        path=/xrefs/name/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=application/json
      </basic>
    </examples>
  </xref_name>
</endpoints>
