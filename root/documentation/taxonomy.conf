<endpoints>

  <taxonomy_id>
    description=Search for a taxonomic term by its identifier or name
    endpoint="taxonomy/id/:id"
    method=GET
    group=Ontologies and Taxonomy
    output=json
    output=xml
    output=yaml
    <params>
      <id>
        type=String
        description=The identifier of the term to search for. Can be a NCBI taxon id or a name
        example=__VAR(taxon)__
        example=__VAR(taxon_name)__
        required=1
      </id>
      <simple>
        type=Boolean
        description=If set the API will avoid the fetching of parent and child terms
        default=0
      </simple>
    </params>
    <examples>
      <one>
        path=/taxonomy/id/
        capture=__VAR(taxon)__
        content=application/json
      </one>
      <two>
        path=/taxonomy/id/
        capture=__VAR(taxon_name)__
        content=application/json
      </two>
    </examples>
  </taxonomy_id>
  
  <taxonomy_classification>
    description=Return the taxonomic classification of a taxon node
    endpoint="taxonomy/classification/:id"
    method=GET
    group=Ontologies and Taxonomy
    output=json
    output=xml
    output=yaml
    <params>
      <id>
        type=String
        description=The identifier of the term to search for. Can be a NCBI taxon id or a name
        example=__VAR(taxon)__
        example=__VAR(taxon_name)__
        required=1
      </id>
    </params>
    <examples>
      <one>
        path=/taxonomy/classification/
        capture=__VAR(taxon)__
        content=application/json
      </one>
      <two>
        path=/taxonomy/classification/
        capture=__VAR(taxon_name)__
        content=application/json
      </two>
    </examples>
  </taxonomy_classification>
  <taxonomy_name>
    description=Search for a taxonomic id by a non-scientific name
    endpoint="taxonomy/name/:name"
    method=GET
    group=Ontologies and Taxonomy
    output=json
    output=xml
    output=yaml
    <params>
      <name>
        type=String
        description=The non-scientific name to search for. Can include SQL wildcards
        example=__VAR(taxon_nameish)__
        required=1
      </name>
    </params>
    <examples>
      <one>
        path=/taxonomy/name/
        capture=__VAR(taxon_nameish)__
        content=application/json
      </one>
      <two>
        path=/taxonomy/name/
        capture=__VAR(species_common)__
        content=application/json
      </two>
    </examples>
  </taxonomy_name>
</endpoints>