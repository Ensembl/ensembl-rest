<endpoints>
  <feature_region>
    description=Retrieves multiple types of features for a given region
    endpoint=feature/region/:species/:region
    method=GET
    group=Features
    output=json
    output=xml
    output=gff3
    output=bed
    <params>
      <species>
        type=String
        description=Registry name/aliases used to restrict searches by
        example=homo_sapiens
        required=1
      </species>
      <region>
        type=String
        description=The region to retrieve features for. A maximum of 5Mb is allowed to be requested at any one time
        example=X:1..1000:1
        example=X:1..1000:-1
        example=X:1..1000
        required=1
      </region>
      <db_type>
        type=String
        description=Specify the database type to retrieve features from if not using the core database. We automatically choose the correct type of DB for variation, comparative and regulation features
        example=core
        example=otherfeatures
        default=core
      </db_type>
      <feature>
        type=Enum(gene, transcript, cds, exon, repeat, simple, misc, variation, somatic_variation, structural_variation, somatic_structural_variation, constrained, regulatory)
        description=The type of feature to retrieve. Multiple values are accepted.
        default=none
        required=1
      </feature>
      <species_set>
        type=String
        description=The species set name to retrieve constrained elements for
        default=mammals
      </species_set>
      <logic_name>
        type=String
        description=Limit retrieval of genes, transcripts and exons by a given logic name
      </logic_name>
      <so_term>
        type=String
        description=SO term to search for variations by. Will search the given and child terms
        example=SO:0001650
      </so_term>
      <misc_set>
        type=String
        description=Miscellaneous set which groups together misc feature entries. Consult the DB or returned data sets to discover what is available
        example=cloneset_30k 
      </misc_set>
      <biotype>
        type=String
        description=Biotype of the gene or transcript to fetch. Cannot be used in conjunction with logic_name when querying transcripts
        example=protein_coding
      </biotype>
      <trim_upstream>
        type=Boolean
	description=Trim features which overlaps upstream with the given region.
	default=0
      </trim_upstream>
      <trim_downstream>
        type=Boolean
	description=Trim features which overlaps downstream with the given region.
	default=0
      </trim_upstream>
    </params>
    <examples>
      <basic>
        path=/feature/region/
        capture=human
        capture=7:140424943-140624564
        content=application/json
        <params>
          feature=gene
          feature=transcript
          feature=cds
          feature=exon
        </params>
      </basic>
      <basic_gff3>
        path=/feature/region/
        capture=human
        capture=7:140424943-140624564
        content=text/x-gff3
        <params>
          feature=gene
          feature=transcript
          feature=cds
          feature=exon
        </params>
      </basic_gff>
    </examples>
  </feature_region>
  
  <feature_id>
    description=Uses the given identifier as a way of indicating the Slice of features required. All returned features will overlap the given feature
    endpoint=feature/id/:id
    method=GET
    group=Features
    output=json
    output=xml
    output=gff3
    output=bed
    <params>
      <id>
        type=String
        description=The stable identifier of the entity you wish to retrieve overlapping features
        example=__VAR(gene_stable_id)__
        required=1
      </id>
      <species>
        type=String
        description=Registry name/aliases used to restrict searches by. Only required if a stable ID is not unique to a species (not the case with Ensembl databases)
        example=__VAR(species)__
      </species>
      <object_type>
        type=String
        description=Object type to restrict searches by. Only required if a stable ID is not unique to an object class
        example=gene
      </object_type>
      <db_type>
        type=String
        description=Specify the database type. Only required if a stable ID is not unique to a single database class
        example=core
      </db_type>
      <feature>
        type=Enum(gene, transcript, cds, exon, repeat, simple, misc, variation, somatic_variation, structural_variation, somatic_structural_variation, constrained, regulatory)
        description=The type of feature to retrieve. Multiple values are accepted.
        default=none
        required=1
      </feature>
      <species_set>
        type=String
        description=The species set name to retrieve constrained elements for
        default=mammals
      </species_set>
      <logic_name>
        type=String
        description=Limit retrieval of genes, transcripts and exons by a given logic name
      </logic_name>
      <so_term>
        type=String
        description=SO term to search for variations by. Will search the given and child terms
        example=SO:0001650
      </so_term>
      <misc_set>
        type=String
        description=Miscellaneous set which groups together misc feature entries. Consult the DB or returned data sets to discover what is available
        example=cloneset_30k 
      </misc_set>
      <biotype>
        type=String
        description=Biotype of the gene or transcript to fetch. Cannot be used in conjunction with logic_name when querying transcripts
        example=protein_coding
      </biotype>
    </params>
    <examples>
      <basic>
        path=/feature/id/
        capture=__VAR(gene_stable_id)__
        <params>
          feature=gene
        </params>
        content=application/json
      </basic>
    </examples>
  </feature_id>

  <feature_translation>
    description=Uses the given identifier to return translation related features.
    endpoint=feature/translation/:id
    method=GET
    group=Features
    output=json
    output=xml
    output=gff3
    output=bed
    <params>
      <id>
        type=String
        description=The stable identifier of the entity you wish to retrieve overlapping features
        example=__VAR(translation_stable_id)__
        required=1
      </id>
      <species>
        type=String
        description=Registry name/aliases used to restrict searches by. Only required if a stable ID is not unique to a species (not the case with Ensembl databases)
        example=__VAR(species)__
      </species>
      <db_type>
        type=String
        description=Specify the database type. Only required if a stable ID is not unique to a single database class
        example=core
      </db_type>
      <feature>
        type=Enum(transcript_variation, protein_feature, residue_overlap, translation_exon, somatic_transcript_variation)
        description=Specify the type of features requested for the translation
        default=protein_feature
      </feature>
      <type>
        type=String
        description=Type of data to filter by. By default, all features are returned. Can specify a type of domain or consequence
        default=none
        example=low_complexity
      </type>
      <so_term>
        type=String
        description=SO term to search for variations by. Will search the given and child terms
        example=SO:0001650
      </so_term>
    </params>
    <examples>
      <basic_pf>
        path=/feature/translation/
        capture=__VAR(translation_stable_id)__
        <params>
          type=Superfamily
        </params>
        content=application/json
      </basic_pf>
      <basic_vf>
        path=/feature/translation/
        capture=__VAR(translation_stable_id)__
        <params>
          feature=transcript_variation
          type=missense_variant
        </params>
        content=application/json
      </basic_vf>
      <somatic_vf>
        path=/feature/translation/
        capture=__VAR(translation_stable_id)__
        <params>
          feature=somatic_transcript_variation
        </params>
        content=application/json
      </somatic_vf>
    </examples>
  </feature_id>

  
</endpoints>
