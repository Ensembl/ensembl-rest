<endpoints>
  <homology_symbol>
    description=Retrieves homology information by symbol
    endpoint=homology/symbol/:species/:symbol
    method=GET
    group=Comparative Genomics
    output=json
    output=xml
    <params>
      <species>
        type=String
        description=Registry name/aliases used to restrict searches by
        example=__VAR(species)__
        example=__VAR(species_common)__
        required=1
      </species>
      <symbol>
        type=String
        description=Symbol to search with
        example=__VAR(gene_symbol)__
        required=1
      </symbol>
      <compara>
        type=String
        description=The name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data
        default=multi (if using Ensembl)
        example=multi
      </compara>
      <external_db>
        type=String
        description=Limit your symbol search to just this database
        example=__VAR(gene_symbol_db)__
      </external_db>
      <format>
        type=Enum(full,condensed)
        description=Specify the formats to emit from this endpoint
        default=full
      </format>
      <type>
        type=Enum(orthologues, paralogues, all)
        description=The type of homology to return from this call. Useful if you need only one type of homology back from the service
        default=all
      </type>
      <target_species>
        type=String
        description=Target species to restrict the homology results from. Supports all registry aliases
        example=__VAR(species)__
        example=__VAR(species_common)__
      </target_species>
      <target_taxon>
        type=Integer
        description=Taxon identifier to search by
        example=__VAR(taxon)__
        example=__VAR(target_taxon)__
      </target_taxon>
    </params>
    <examples>
      <basic>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=application/json
      </basic>
      <basic_xml>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=text/xml
      </basic_xml>
      <format>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=application/json
        <params>
          type=orthologues
          format=condensed
        </params>
      </format>
      <format_limits>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=application/json
        <params>
          type=orthologues
          format=condensed
          target_taxon=__VAR(target_taxon)__
          target_species=__VAR(target_species)__
        </params>
      </format_limits>
    </examples>
  </homology_symbol>
  <homology_ensemblgene>
    description=Retrieves homology information by ensembl gene id
    endpoint=homology/id/:id
    method=GET
    group=Comparative Genomics
    output=json
    output=xml
    <params>
      <species>
        type=String
        description=Registry name/aliases used to restrict searches by. Only required if a stable ID is not unique to a species (not the case with Ensembl databases)
        example=__VAR(species)__
        example=__VAR(species_common)__
      </species>
      <id>
        type=String
        description=Ensembl Gene id
        example=__VAR(gene_stable_id)__
        required=1
      </id>
      <compara>
        type=String
        description=The name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data
        default=multi (if using Ensembl)
        example=multi
      </compara>
      <format>
        type=Enum(full, condensed)
        description=Specify the formats to emit from this endpoint
        default=full
      </format>
      <type>
        type=Enum(orthologues, paralogues, all)
        description=The type of homology to return from this call. Useful if you need only one type of homology back from the service
        default=all
      </type>
      <target_species>
        type=String
        description=Target species to restrict the homology results from. Supports all registry aliases
        example=__VAR(species_common)__
        example=__VAR(target_species)__
      </target_species>
      <target_taxon>
        type=Integer
        description=Taxon identifier to search by
        example=__VAR(taxon)__
        example=__VAR(target_taxon)__
      </target_taxon>
    </params>
    <examples>
      <basic>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=application/json
      </basic>
      <basic_xml>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=text/xml
      </basic_xml>
      <compara>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        <params>
          compara=__VAR(compara)__
        </params>
        content=application/json
      </compara>
      <format>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=application/json
        <params>
          type=orthologues
          format=condensed
        </params>
      </format>
      <format_limits>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=application/json
        <params>
          type=orthologues
          format=condensed
          target_taxon=__VAR(target_taxon)__
        </params>
      </format_limits>
    </examples>
  </homology_ensemblgene>
  <genetree>
    description=Retrieves Gene Tree dumps for a given Gene Tree stable identifier
    endpoint=genetree/id/:id
    method=GET
    group=Comparative Genomics
    output=xml
    output=phyloxml
    output=nh
    <params>
      <id>
        type=String
        description=Ensembl GeneTree ID
        example=__VAR(genetree_stable_id)__
        required=1
      </id>
      <compara>
        type=String
        description=The name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data. By default we search all available comparas for the given identifier
        default=multi (if using Ensembl)
        example=multi
      </compara>
      <phyloxml_aligned>
        type=Boolean
        description=Alter if the PhyloXML returned by this endpoint shows the aligned string with insertions where applicabe
        default=False
      </phyloxml_aligned>
      <phyloxml_sequence>
        type=Enum(none, cdna, protein)
        description=The type of sequence to bring back in the PhyloXML files. Setting it to none results in no sequence being returned
        default=protein
      </phyloxml_sequence>
      <nh_format>
        type=Enum(full, display_label_composite, simple, species, species_short_name, ncbi_taxon, ncbi_name, njtree, phylip)
        description=The format of a NH (New Hampshire) request.
        default=simple
      </nhx_format>
    </params>
    <examples>
      <phyloxml>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=text/x-phyloxml+xml
      </phyloxml>
      <phyloxml_cdna>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=text/x-phyloxml+xml
        <params>
          phyloxml_sequence=cdna
          phyloxml_aligned=1
        </params>
      </phyloxml_cdna>
      <phyloxml_none>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=text/x-phyloxml+xml
        <params>
          phyloxml_sequence=none
        </params>
      </phyloxml_none>
      <nh>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=text/x-nh
        <params>
          nh_format=simple
        </params>
      </nh>
    </examples>
  </genetree>
</endpoints>
