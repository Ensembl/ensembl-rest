<endpoints>
  <sequence_id>
    description=Request multiple types of sequence by stable identifier. Supports feature masking and expand options.
    endpoint="sequence/id/:id"
    group=Sequence
    method=GET
    output=fasta
    output=json
    ouput=seqxml
    output=text
    output=yaml
    <params>
      <id>
        type=String
        description=An Ensembl stable ID
        example=__VAR(gene_stable_id)__
        example=__VAR(gene_stable_id)__.fasta (supported on some deployments)
        required=1
      </id>
      <type>
        type=Enum(genomic,cds,cdna,protein)
        description=Type of sequence. Defaults to genomic where applicable, i.e. not translations. cdna refers to the spliced transcript sequence with UTR; cds refers to the spliced transcript sequence without UTR.
        default=genomic
        example=cds
      </type>
      <species>
        type=String
        description=Species name/alias
        example=__VAR(species)__
      </species>
      <object_type>
        type=String
        description=Filter by feature type
        example=gene
      </object_type>
      <db_type>
        type=String
        description=Restrict the search to a database other than the default. Useful if you need to use a DB other than core
        example=core
      </db_type>
      <format>
        type=Enum(fasta)
        description=Format of the data
        example=fasta
      </format>
      <mask>
        type=Enum(hard,soft)
        description=Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. Only available when using genomic sequence type.
        example=hard
      </mask>
      <mask_feature>
        type=Boolean
        description=Mask features on the sequence. If sequence is genomic, mask introns. If sequence is cDNA, mask UTRs. Incompatible with the 'mask' option
        default=0
      </mask_feature>
      <expand_5prime>
        type=Int
        description=Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type.
        example=1000
      </expand_5prime>
      <expand_3prime>
        type=Int
        description=Expand the sequence downstream of the sequence by this many basepairs. Only available when using genomic sequence type.
        example=1000
      </expand_3prime>
      <multiple_sequences>
        type=Boolean
        description=Allow the service to return more than 1 sequence per identifier. This is useful when querying for a gene but using a type such as protein.
        default=0
      </multiple_sequences>
      <start>
	type=Int
	description=Trim the start of the sequence by this many basepairs. Trimming is relative to reading direction and in the coordinate system of the stable identifier. Parameter can not be used in conjunction with expand_5prime or expand_3prime.
	example=1000
      </start>
      <end>
	type=Int
	description=Trim the end of the sequence by this many basepairs. Trimming is relative to reading direction and in the coordinate system of the stable identifier. Parameter can not be used in conjunction with expand_5prime or expand_3prime.
	example=1000
      </end>
    </params>
    <examples>
      <basic>
        path=/sequence/id/
        capture=__VAR(gene_stable_id)__
        content=text/plain
      </basic>
      <cdna>
        path=/sequence/id/
        capture=__VAR(transcript_stable_id)__
        <params>
          type=cdna
        </params>
        content=text/x-fasta
      </cdna>
      <cds>
        path=/sequence/id/
        capture=__VAR(transcript_stable_id)__
        <params>
          type=cds
        </params>
        content=text/x-fasta
      </cds>
      <genomic>
        path=/sequence/id/
        capture=__VAR(exon_stable_id)__
        <params>
          type=genomic
        </params>
        content=text/x-fasta
      </genomic>
      <genomic_extend>
        path=/sequence/id/
        capture=__VAR(exon_stable_id)__
        <params>
          type=genomic
          expand_5prime=10
        </params>
        content=text/x-fasta
      </genomic_extend>
      <protein>
        path=/sequence/id/
        capture=__VAR(translation_stable_id)__
        content=application/json
      </protein>
      <ccds>
        path=/sequence/id/
        capture=__VAR(other_features_transcript_stable_id)__
        <params>
          db_type=otherfeatures
          object_type=transcript
          species=__VAR(species_common)__
          type=cds
        </params>
        content=text/x-fasta
      </ccds>
      <prediction>
        path=/sequence/id/
        capture=__VAR(prediction_transcript_stable_id)__
        <params>
          object_type=predictiontranscript
          db_type=core
          type=protein
          species=__VAR(species)__
        </params>
        content=application/json
      </prediction>
      <multiple_sequences>
        path=/sequence/id/
        capture=__VAR(gene_stable_id)__
        <params>
          type=protein
          multiple_sequences=1
        </params>
        content=text/x-seqxml+xml
      </multiple_sequences>
    </examples>
  </sequence_id>

  <sequence_id_post>
    description=Request multiple types of sequence by a stable identifier list.
    endpoint="sequence/id"
    group=Sequence
    method=POST
    output=json
    <params>
      <type>
        type=Enum(genomic,cds,cdna,protein)
        description=Type of sequence. Defaults to genomic where applicable, i.e. not translations. cdna refers to the spliced transcript sequence with UTR; cds refers to the spliced transcript sequence without UTR.
        default=genomic
        example=cds
      </type>
      <species>
        type=String
        description=Species name/alias
        example=__VAR(species)__
      </species>
      <object_type>
        type=String
        description=Filter by feature type
        example=gene
      </object_type>
      <db_type>
        type=String
        description=Restrict the search to a database other than the default. Useful if you need to use a DB other than core
        example=core
      </db_type>
      <format>
        type=Enum(fasta)
        description=Format of the data
        example=fasta
      </format>
      <mask>
        type=Enum(hard,soft)
        description=Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. Only available when using genomic sequence type.
        example=hard
      </mask>
      <mask_feature>
        type=Boolean
        description=Mask features on the sequence. If sequence is genomic, mask introns. If sequence is cDNA, mask UTRs. Incompatible with the 'mask' option
        default=0
      </mask_feature>
      <expand_5prime>
        type=Int
        description=Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type.
        example=1000
      </expand_5prime>
      <expand_3prime>
        type=Int
        description=Expand the sequence downstream of the sequence by this many basepairs. Only available when using genomic sequence type.
        example=1000
      </expand_3prime>
      <start>
	type=Int
	description=Trim the start of the sequence by this many basepairs. Trimming is relative to reading direction and in the coordinate system of the stable identifier. Parameter can not be used in conjunction with expand_5prime or expand_3prime.
	example=1000
      </start>
      <end>
	type=Int
	description=Trim the end of the sequence by this many basepairs. Trimming is relative to reading direction and in the coordinate system of the stable identifier. Parameter can not be used in conjunction with expand_5prime or expand_3prime.
	example=1000
      </end>
    </params>
    postformat={ "ids": array }
    <examples>
      <basic>
        path=/sequence/id
        accept=application/json
        content=application/json
        body={ "ids" : ["__VAR(gene_stable_id)__", "__VAR(gene_stable_id_2)__" ] }
      </basic>
    </examples>
  </sequence_id_post>
  <sequence_region>
    description=Returns the genomic sequence of the specified region of the given species. Supports feature masking and expand options.
    endpoint="sequence/region/:species/:region"
    group=Sequence
    method=GET
    output=fasta
    output=json
    ouput=seqxml
    output=text
    output=yaml
    <params>
      <region>
        type=String
        description=Query region. A maximum of 10Mb is allowed to be requested at any one time
        example=__VAR(sequence_region)__
        example=__VAR(sequence_region_negative)__
        example=__VAR(sequence_region_strandless)__
        required=1
      </region>
      <species>
        type=String
        description=Species name/alias
        example=__VAR(species)__
        example=__VAR(species_common)__
        required=1
      </species>
      <format>
        type=Enum(fasta)
        description=Format of the data.
        example=fasta
      </format>
      <mask>
        type=Enum(hard,soft)
        description=Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lower cased characters. Only available when using genomic sequence type.
        example=hard
      </mask>
      <mask_feature>
        type=Boolean
        description=Mask features on the sequence. If sequence is genomic, mask introns. If sequence is cDNA, mask UTRs. Incompatible with the 'mask' option
        example=1
        default=0
      </mask_feature>
      <expand_5prime>
        type=Int
        description=Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type.
        example=1000
      </expand_5prime>
      <expand_3prime>
        type=Int
        description=Expand the sequence downstream of the sequence by this many basepairs. Only available when using genomic sequence type.
        example=1000
      </expand_3prime>
      <coord_system>
        type=String
        description=Filter by coordinate system name
        example=contig
        example=seqlevel
      </coord_system>
      <coord_system_version>
        type=String
        description=Filter by coordinate system version
        example=GRCh37
      </coord_system_version>
    </params>
    <examples>
      <basic>
        path=/sequence/region/
        capture=__VAR(species_common)__
        capture=__VAR(sequence_region)__
        content=text/plain
      </basic>
      <negative>
        path=/sequence/region/
        capture=__VAR(species_common)__
        capture=__VAR(sequence_region)__
        content=text/x-fasta
      </negative>
      <json>
        path=/sequence/region/
        capture=__VAR(species_common)__
        capture=__VAR(sequence_region)__
        content=application/json
      </json>
      <extends>
        path=/sequence/region/
        capture=__VAR(species_common)__
        capture=__VAR(sequence_region)__
        <params>
          expand_5prime=60
          expand_3prime=60
        </params>
        content=text/x-fasta
      </extends>
      <masking>
        path=/sequence/region/
        capture=__VAR(species_common)__
        capture=__VAR(sequence_region)__
        <params>
          mask=soft
        </params>
        content=text/x-fasta
      </masking>
      <contig>
        path=/sequence/region/
        capture=__VAR(species_common)__
        capture=__VAR(contig_sequence_region)__
        <params>
          coord_system=__VAR(contig_coord_system)__
        </params>
        content=text/x-fasta
      </contig>
    </examples>
  </sequence_region>

  <sequence_region_post>
    description=Request multiple types of sequence by a list of regions.
    endpoint="sequence/region/:species"
    group=Sequence
    method=POST
    output=json
    <params>
      <species>
        type=String
        description=Species name/alias
        example=__VAR(species)__
        example=__VAR(species_common)__
        required=1
      </species>
      <format>
        type=Enum(fasta)
        description=Format of the data.
        example=fasta
      </format>
      <mask>
        type=Enum(hard,soft)
        description=Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lower cased characters. Only available when using genomic sequence type.
        example=hard
      </mask>
      <mask_feature>
        type=Boolean
        description=Mask features on the sequence. If sequence is genomic, mask introns. If sequence is cDNA, mask UTRs. Incompatible with the 'mask' option
        example=1
        default=0
      </mask_feature>
      <expand_5prime>
        type=Int
        description=Expand the sequence upstream of the sequence by this many basepairs. Only available when using genomic sequence type.
        example=1000
      </expand_5prime>
      <expand_3prime>
        type=Int
        description=Expand the sequence downstream of the sequence by this many basepairs. Only available when using genomic sequence type.
        example=1000
      </expand_3prime>
      <coord_system>
        type=String
        description=Filter by coordinate system name
        example=contig
        example=seqlevel
      </coord_system>
      <coord_system_version>
        type=String
        description=Filter by coordinate system version
        example=GRCh37
      </coord_system_version>
    </params>
    postformat={ "regions": array }
    <examples>
      <basic>
        path=/sequence/region/
        capture=__VAR(species_common)__
        accept=application/json
        content=application/json
        body={ "regions" : ["__VAR(sequence_region)__", "__VAR(contig_sequence_region)__"] }
      </basic>
    </examples>
  </sequence_region_post>
</endpoints>
